---
- hosts: web
  become_user: root

  tasks:
    - name: inspecting docker swarm
      shell: docker node ls
      register: swarm_info
      no_log: yes
      become: true
      ignore_errors: yes
      


    - set_fact:
        Leader: "{{ item.name }}"
      when: item.status == 'Leader'
      with_items:
        - { name: '{{ swarm_info.stdout_lines[1].split()[1] }}', status: '{{ swarm_info.stdout_lines[1].split()[4] }}' }
        - { name: '{{ swarm_info.stdout_lines[2].split()[1] }}', status: '{{ swarm_info.stdout_lines[2].split()[4] }}' }
        - { name: '{{ swarm_info.stdout_lines[3].split()[1] }}', status: '{{ swarm_info.stdout_lines[3].split()[4] }}' }

    - debug:
        msg:
          - "{{ Leader }} is the Leader"
      ignore_errors: yes
          

    - name: checking swarm status
      shell: 'docker info | grep Swarm'
      register: swarm_stat
      ignore_errors: yes
      delegate_to: "{{ Leader }}"
      become: true

    - debug: msg=" docker swarm is {{ swarm_stat.stdout_lines.0.split()[1] }}"
      ignore_errors: yes
      delegate_to: "{{ Leader }}"
      

    - name: stopping docker service
      shell: systemctl stop docker
      become: true
      register: docker_status
      delegate_to: "{{ item }}"
      when: "( item != Leader )"
      with_inventory_hostnames:
        - all


    - include: reboot.yml
